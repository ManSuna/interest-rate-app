import React, { useState, useEffect } from 'react';
import { Formik, Form, Field } from 'formik';
import { Select, MenuItem, InputLabel, FormControl, FormHelperText, Grid, Button } from '@mui/material';
import { useFormikContext } from 'formik';

const dateRanges = [
  { id: 1, startDate: '2025/04/25', endDate: '2025/04/29' },
  { id: 2, startDate: '2025/04/30', endDate: '2025/05/08' },
  { id: 3, startDate: '2025/05/09', endDate: '2025/05/22' },
];

const InterestRateCycleForm = () => {
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');

  const handleStartDateChange = (event) => {
    const selectedStartDate = event.target.value;
    setStartDate(selectedStartDate);
    const selectedRange = dateRanges.find(
      (range) => range.startDate === selectedStartDate
    );
    setEndDate(selectedRange ? selectedRange.endDate : '');
  };

  return (
    <Formik
      initialValues={{
        startDate: '',
        endDate: '',
        interestPaymentAmount: '',
      }}
      onSubmit={(values) => {
        console.log(values);
      }}
    >
      {({ values, touched, errors, handleChange, handleBlur, setFieldValue }) => (
        <Form>
          <Grid container spacing={2}>
            <Grid item xs={6}>
              <FormControl fullWidth error={touched.startDate && Boolean(errors.startDate)}>
                <InputLabel>Start Date</InputLabel>
                <Field
                  name="startDate"
                  as={Select}
                  value={values.startDate}
                  onChange={(e) => {
                    handleChange(e);
                    handleStartDateChange(e);
                  }}
                  onBlur={handleBlur}
                >
                  {dateRanges.map((range) => (
                    <MenuItem key={range.id} value={range.startDate}>
                      {range.startDate}
                    </MenuItem>
                  ))}
                </Field>
                {touched.startDate && errors.startDate && (
                  <FormHelperText>{errors.startDate}</FormHelperText>
                )}
              </FormControl>
            </Grid>
            <Grid item xs={6}>
              <FormControl fullWidth error={touched.endDate && Boolean(errors.endDate)}>
                <InputLabel>End Date</InputLabel>
                <Field
                  name="endDate"
                  as={Select}
                  value={values.endDate}
                  onChange={handleChange}
                  onBlur={handleBlur}
                  disabled
                >
                  <MenuItem value={endDate}>{endDate}</MenuItem>
                </Field>
                {touched.endDate && errors.endDate && (
                  <FormHelperText>{errors.endDate}</FormHelperText>
                )}
              </FormControl>
            </Grid>
            <Grid item xs={12}>
              <FormControl fullWidth error={touched.interestPaymentAmount && Boolean(errors.interestPaymentAmount)}>
                <InputLabel>Interest Payment Amount</InputLabel>
                <Field
                  name="interestPaymentAmount"
                  as="input"
                  type="number"
                  value={values.interestPaymentAmount}
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                {touched.interestPaymentAmount && errors.interestPaymentAmount && (
                  <FormHelperText>{errors.interestPaymentAmount}</FormHelperText>
                )}
              </FormControl>
            </Grid>
            <Grid item xs={12}>
              <Button type="submit" variant="contained" color="primary">
                Submit
              </Button>
            </Grid>
          </Grid>
        </Form>
      )}
    </Formik>
  );
};

export default InterestRateCycleForm;
