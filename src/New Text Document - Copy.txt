fetch('/api/download')
  .then(response => {
    const contentDisposition = response.headers.get('Content-Disposition');
    console.log('Header:', contentDisposition);

    // Optionally download the file
    return response.blob().then(blob => {
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');

      // Try to parse the filename from the header
      let filename = 'downloaded-file';
      if (contentDisposition && contentDisposition.includes('filename=')) {
        filename = contentDisposition
          .split('filename=')[1]
          .replaceAll('"', '')
          .trim();
      }

      link.href = url;
      link.download = filename;
      document.body.appendChild(link);
      link.click();
      link.remove();
    });
  });


useEffect(() => {
  fetch('/api/download')
    .then(response => {
      // Loop through all headers
      for (let [key, value] of response.headers.entries()) {
        console.log(`${key}: ${value}`);
      }

      // Optional: continue to handle blob
      return response.blob();
    })
    .then(blob => {
      // Do something with the blob (download, preview, etc.)
    });
}, []);





# Node modules (massive folder, recreated by npm/yarn)
node_modules/

# Build output (don't commit this — it's generated via `npm run build`)
build/

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# OS / editor junk
.DS_Store
Thumbs.db
*.log

# IDE settings (optional, depending on your team)
.vscode/
.idea/
*.sw?

# dotenv files (optional — if you store secrets locally)
.env
.env.local
.env.*.local

# Tests / coverage output
coverage/
*.lcov

# Optional: lock file (keep only one depending on your package manager)
package-lock.json
# or
yarn.lock
# or
pnpm-lock.yaml
# Node modules (massive folder, recreated by npm/yarn)
node_modules/

# Build output (don't commit this — it's generated via `npm run build`)
build/

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# OS / editor junk
.DS_Store
Thumbs.db
*.log

# IDE settings (optional, depending on your team)
.vscode/
.idea/
*.sw?

# dotenv files (optional — if you store secrets locally)
.env
.env.local
.env.*.local

# Tests / coverage output
coverage/
*.lcov

# Optional: lock file (keep only one depending on your package manager)
package-lock.json
# or
yarn.lock
# or
pnpm-lock.yaml

