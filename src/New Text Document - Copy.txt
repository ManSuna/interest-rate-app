// src/context/AuthContext.js
import React, { createContext, useState, useContext } from 'react';

const AuthContext = createContext();

export const AuthProvider = ({ children }) => {
  const [token, setToken] = useState(localStorage.getItem('authToken'));
  const [metadata, setMetadata] = useState(null);
  const [error, setError] = useState(null);

  const login = async (username, password) => {
    try {
      // 1. Send login request
      const res = await fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password }),
      });

      if (!res.ok) throw new Error('Login failed');

      const { token } = await res.json();
      localStorage.setItem('authToken', token);
      setToken(token);

      // 2. Fetch metadata using token
      const metaRes = await fetch('/api/metadata', {
        headers: { Authorization: `Bearer ${token}` },
      });

      if (!metaRes.ok) throw new Error('Metadata fetch failed');
      const metaDataJson = await metaRes.json();
      setMetadata(metaDataJson);
    } catch (err) {
      console.error(err);
      setError(err.message);
    }
  };

  const logout = () => {
    setToken(null);
    setMetadata(null);
    localStorage.removeItem('authToken');
  };

  return (
    <AuthContext.Provider value={{ token, metadata, login, logout, error }}>
      {children}
    </AuthContext.Provider>
  );
};

// Hook to use auth context
export const useAuth = () => useContext(AuthContext);
